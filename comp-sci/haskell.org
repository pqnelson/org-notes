#+TITLE: Haskell
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../css/stylesheet.css" />
# Created Thursday July 15, 2021 at  7:53AM

* State# "Monad"
:PROPERTIES:
:CUSTOM_ID: h-a88d3e88-06bc-43ee-b041-a078412a4ce7
:END:

The ~IO~ Monad is ultimately ~State# RealWorld~

- [[https://github.com/ghc/ghc/blob/42aa7fbd6cc51f7cd993621336e1c3fa8202ab1f/compiler/GHC/Builtin/Types/Prim.hs#L1145-L1159][Note]] in ~Prim.hs~ about the ~State#~ type constructor
- [[https://github.com/ghc/ghc/blob/42aa7fbd6cc51f7cd993621336e1c3fa8202ab1f/libraries/ghc-prim/GHC/Magic.hs#L35][Apparently]] it lives in the ~GHC.Prim~ module.
- [[https://github.com/ghc/ghc/blob/a7f9670e899bcbc87276446a1aac2304cade2b2f/compiler/GHC/Builtin/primops.txt.pp#L2759-L2769][primops]] notes that ~State#~ is represented by nothing at all, so
  ~State# a~ is an empty type.
- ~IO a~ is/was defined in [[https://github.com/ghc/ghc/blob/b73c9c5face16cc8bedf4168ce10770c7cc67f80/libraries/ghc-prim/GHC/Types.hs#L233][~GHC.Prim.Types~]] as
  ~newtype IO a = IO (State# RealWorld -> (# State# RealWorld, a #))~.

* References
:PROPERTIES:
:CUSTOM_ID: h-35f73750-4ad3-4d3c-bdec-429eee81e731
:END:

- Ben Lynn's [[https://crypto.stanford.edu/~blynn/compiler/socrates.html][notes on Haskell compiler]]
- John Hughes,\\
  [[https://www.cs.ox.ac.uk/publications/publication3788-abstract.html][THE DESIGN AND IMPLEMENTATION OF PROGRAMMING LANGUAGES]]


** Type Checking
:PROPERTIES:
:CUSTOM_ID: h-070ae1ee-843d-41d0-9486-0f04016d6fda
:END:

- Dimitrios Vytiniotis, Simon Peyton Jones, Tom Schrijvers, Martin Sulzmann,\\
  "OutsideIn(X): Modular type inference with local assumptions".\\
  /Journal of Functional Programming/ *21* (2011) pp. 333--412 
  [[https://www.microsoft.com/en-us/research/publication/outsideinx-modular-type-inference-with-local-assumptions/][Eprint]]
