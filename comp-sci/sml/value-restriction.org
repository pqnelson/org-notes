#+TITLE: Value Restriction - SML
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2023-09-13T08:03:34-07:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../css/stylesheet.css" />
# Created Wednesday September 13, 2023 at  8:03AM

* Basic Idea
:PROPERTIES:
:CUSTOM_ID: h-12e36b74-3f90-418c-952c-39f409dd2c5d
:END:

We run into problems when we try to have let-polymorphism with mutable
references. This was the subject of Mads Tofte's PhD dissertation back
in the 1980s.

The solution first proposed was to distinguish imperative type
variables from applicative type variables. This turned out to be a
nightmare in practice.

Then Wright discovered that let-expressions usually bind values to
local variables, and this would allow us to avoid the problems
discussed in Tofte's dissertation. It was adopted in the 1997
Definition of Standard ML (see the use of nonexpansive expressions,
which are "syntactical values").

* References
:PROPERTIES:
:CUSTOM_ID: h-2a084f7a-8ad0-41c0-a077-8faf832bdeb9
:END:

- Andrew K. Wright,
  "Simple imperative polymorphism".
  /LISP and Symbolic Computation/ *8* no.4 (1995): 343â€“355. doi:10.1007/BF01018828.
  - This is the paper which introduced the concept of "value
    restriction" as a solution to the problem posed by a mutable
    reference cell type in ML-like languages.
- Jacques Garrigue,
  "Relaxing the Value Restriction".
  [[https://caml.inria.fr/pub/papers/garrigue-value_restriction-fiwflp04.pdf][pdf]], 2004(?)
- [[https://logsem.github.io/blog/value_restriction/][Value Restriction]], which summarizes the paper:
  - Amin Timany and Lars Birkedal.
    "Mechanized relational verification of concurrent programs with
    continuations".
    /Proc. ACM Program. Lang./ *3*, ICFP, Article 105 (July 2019), 28 pages. DOI: https://doi.org/10.1145/3341709 
- [[http://mlton.org/ValueRestriction][MLton Wiki]]