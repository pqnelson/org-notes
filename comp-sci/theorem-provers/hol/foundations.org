#+TITLE: Foundations of HOL
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2022-04-30T08:51:46-07:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../../../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../../css/stylesheet.css" />
# Created Saturday April 30, 2022 at  8:51AM

* Introduction
:PROPERTIES:
:CUSTOM_ID: h-52af89fd-9586-4993-9050-a4a682f26910
:END:

The foundations underlying HOL vary depending on implementation, but
they are all variations on the same theme. Basically:

- a simply-typed lambda calculus with:
  1. two base types (~bool~ and ~ind~ for truth-values and non-logical
     constants, resp.), and
  2. some primitive symbols (like ~/\~ [conjunction], ~\/~
     [disjunction], ~==>~ [implies], ~<=>~ [logical equivalence],
     quantifiers --- at least universal quantification).

We sometimes find type variables in the literature, but these are in the
metalanguage and not HOL itself.