#+TITLE: Mizar
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2021-11-21T10:30:09-08:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../css/stylesheet.css" />
# Created Sunday November 21, 2021 at 10:30AM

* Useful Definitions
:PROPERTIES:
:CUSTOM_ID: h-6bd8d47a-d34f-4cfa-b541-e1cf3bcac9f7
:END:

- ~Element of X~ is defined in [[http://www.mizar.org/version/current/html/subset_1.html][~subset_1.miz~]] , lines 67 /et seq/.
- ~Subset of X~ is defined in [[http://www.mizar.org/version/current/html/subset_1.html][~subset_1.miz~]] (line 99), but it just means
  ~Element of bool X~; and ~bool X~ is defined in [[http://www.mizar.org/version/current/html/zfmisc_1.html][~zfmisc_1.miz~]]
  (line 71) as ~bool X -> set means Z in it iff Z c= X~ (and ~c=~ is the
  subset operator, defined in [[http://mizar.org/version/current/html/tarski.html][~tarski.miz~]], as we would expect its
  meaning $X\subseteq Y\iff (\forall x, x\in X\implies x\in Y)$)
  
* Random
:PROPERTIES:
:CUSTOM_ID: h-19c0ab35-60e3-4d69-9ec4-9eb1bf8cef89
:END:
- Cayley-Dickson construction in [[http://mizar.org/version/current/html/cayldick.html][~cayldick.miz~]]

* Lessons Learned
:PROPERTIES:
:CUSTOM_ID: h-afdc709c-b5e8-4cb9-9cee-81984c7a3c09
:END:

** Vocabulary Files
:PROPERTIES:
:CUSTOM_ID: h-c0226382-31df-4572-891b-e9ae20a09b98
:END:

When defining new terms, well, we should get started by doing something
like:

#+begin_example
user@computer:~/$ mkdir -p work/first-article/
user@computer:~/$ cd work/first-article/
user@computer:~/work/first-article/$ mkdir DICT
user@computer:~/work/first-article/$ mkdir TEXT
user@computer:~/work/first-article/$ mkdir PREL
#+end_example

Now for a "Hello World" type Mizar file: just create a new predicate
~foobar~. We do this by creating ~first-article/DICT/TMP.voc~ and
sticking one line in it:

#+begin_example
Rfoobar
#+end_example

Then in ~first-article/TEXT/TMP.miz~ we would have:

#+begin_example
environ
vocabularies TMP; :: this is important! Without it, you get an error


begin

definition
  let a,b be set;
  pred a,b foobar means
  :Def1:
  a = b;
end;
#+end_example

Without the ~vocabularies TMP;~ line, you'll get a "301: Predicate
symbol expected" error, basically Mizar telling you that you forgot to
include ~foobar~ as a predicate in your vocabulary file.

* Installing on Raspberry Pi
:PROPERTIES:
:CUSTOM_ID: h-db11b193-c42a-415b-b960-c4efc7dacd50
:END:

This was surprisingly simple. I usually keep source code related stuff
in =~/src/=, so here's the bash commands that got me cooking:

#+begin_example
alex@pi:~$ cd src
alex@pi:~/src/$ mkdir mizar
alex@pi:~/src/$ cd mizar
alex@pi:~/src/mizar/$ wget http://mizar.uwb.edu.pl/~softadm/pub/system/arm-linux/mizar-8.1.09_5.59.1363-arm-linux.tar
alex@pi:~/src/mizar/$ tar -xvf mizar-8.1.09_5.59.1363-arm-linux.tar
README
install.sh
mizbin.tar.gz
mizdoc.tar.gz
mizshare.tar.gz

alex@pi:~/src/mizar$ ls

install.sh                            mizbin.tar.gz  mizshare.tar.gz
mizar-8.1.09_5.59.1363-arm-linux.tar  mizdoc.tar.gz  README

alex@pi:~/src/mizar$ sudo ./install.sh --default
...
#+end_example

Then I added one line of code to my =~/.bash_profile=:

#+begin_example
# at the end of ~/.bash_profile
MIZFILES=/usr/local/share/mizar
#+end_example

And, /voil√†/, once we've =source ~/.bash_profile= we'll be able to start
proving in no time. Unfortunately, I still have problems trying to get
it working on my Raspberry Pi.

* Exporting MIZFILES on Linux
:PROPERTIES:
:CUSTOM_ID: h-d045530e-55fb-44e0-af41-03ffc4e5720a
:END:

On Ubuntu, I noticed it was insufficient to add ~MIZFILES=/usr/local/share/mizar~
followed by ~export MIZFILES~
to my ~.bashrc~; instead I needed to add a line to ~/etc/environment~, namely:

#+begin_example
# in /etc/environment, at the end
MIZFILES=/usr/local/share/mizar
#+end_example

After rebooting the computer, emacs expands ~(substitute-in-file-name "$MIZFILES")~
correctly to ~/usr/local/share/mizar~. This allows me to compile a Mizar
file in Emacs with ~C-c Ret~.

* References
:PROPERTIES:
:CUSTOM_ID: h-5b2a23b4-8625-4b20-a0b0-a13c66678638
:END:

- Freek Wiedijk's [[http://mizar.org/project/mizman.pdf][Write a Mizar Article in 9 Easy Steps]]
- Adam Grabowski, Artur Kornilowicz, and Adam Naumowicz,\\
  [[https://jfr.unibo.it/article/view/1980/1356][Mizar in a Nutshell]].
- [[https://math.stackexchange.com/a/2806593/31693][Getting to Know the Mizar Math Library]], math stackexchange thread,
  worth reading
  
  

  