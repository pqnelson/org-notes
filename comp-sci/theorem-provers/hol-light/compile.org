#+TITLE: Compiling HOL Light
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2022-01-11T12:02:26-08:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../../../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../../css/stylesheet.css" />
# Created Tuesday January 11, 2022 at 12:02PM

* OPAM
:PROPERTIES:
:CUSTOM_ID: h-c4e6f09e-d81f-4265-a808-d19c8167a1ea
:END:

On a Raspberry Pi, simply install OCaml using ~sudo apt install ocaml~.

Then clone and build OPAM:

#+begin_example
alex@rpi:~/$ cd src
alex@rpi:~/src/$ git clone https://github.com/ocaml/opam
...
alex@rpi:~/src/$ cd OPAM
alex@rpi:~/src/OPAM/$ ./configure
alex@rpi:~/src/OPAM/$ make lib-ext
alex@rpi:~/src/OPAM/$ make
alex@rpi:~/src/OPAM/$ sudo make install
#+end_example

Before we finish, we need to also install bubblewrap...because...reasons...

#+begin_example
alex@rpi:~/src/OPAM/$ sudo apt install bubblewrap
alex@rpi:~/src/OPAM/$ cd ~
alex@rpi:~/$ opam init

[default] Initialised

<><> Required setup - please read <><><><><><><><><><><><><><><><><><><><><><><>

  In normal operation, opam only alters files within ~/.opam.

  However, to best integrate with your system, some environment variables
  should be set. If you allow it to, this initialisation step will update
  your bash configuration by adding the following line to ~/.bash_profile:

    test -r /home/alex/.opam/opam-init/init.sh && . /home/alex/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true

  Otherwise, every time you want to access your opam installation, you will
  need to run:

    eval $(opam env)

  You can always re-run this setup with 'opam init' later.

Do you want opam to modify ~/.bash_profile? [N/y/f]
(default is 'no', use 'f' to choose a different file) y                                                           

User configuration:
  Updating ~/.bash_profile.
[NOTE] Make sure that ~/.bash_profile is well sourced in your ~/.bashrc.


<><> Creating initial switch 'default' (invariant ["ocaml" {>= "4.05.0"}] - initially with ocaml-system) 

<><> Installing new switch packages <><><><><><><><><><><><><><><><><><><><><><>
Switch invariant: ["ocaml" {>= "4.05.0"}]

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
∗ installed base-bigarray.base
∗ installed base-threads.base
∗ installed base-unix.base
∗ installed ocaml-system.4.11.1
∗ installed ocaml-config.1
∗ installed ocaml.4.11.1
Done.
# Run eval $(opam env --switch=default) to update the current shell environment
alex@raspberrypi:~$
#+end_example

Now we build the infrastructure necessary to play with HOL Light (this
will take about an hour in the following state):

#+begin_example
alex@raspberrypi:~$ opam switch create 4.05.0

<><> Installing new switch packages <><><><><><><><><><><><><><><><><><><><><><>
Switch invariant: ["ocaml-base-compiler" {= "4.05.0"} | "ocaml-system" {= "4.05.0"}]

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
∗ installed base-bigarray.base
∗ installed base-threads.base
∗ installed base-unix.base
⬇ retrieved ocaml-base-compiler.4.05.0  (https://opam.ocaml.org/cache)
Processing 13/18: [ocaml-base-compiler: make world]
#+end_example

* HOL Light
:PROPERTIES:
:CUSTOM_ID: h-6467e267-dbcd-494e-b403-9446923a786e
:END:
Clone HOL Light from github:

#+begin_example
alex@box:~/src/$ git clone https://github.com/jrh13/hol-light
Cloning into 'hol-light'...
remote: Enumerating objects: 8310, done.
remote: Counting objects: 100% (768/768), done.
remote: Compressing objects: 100% (704/704), done.
remote: Total 8310 (delta 137), reused 147 (delta 63), pack-reused 7542
Receiving objects: 100% (8310/8310), 27.50 MiB | 5.38 MiB/s, done.
Resolving deltas: 100% (5585/5585), done.

alex@box:~/src/$ cd hol-light
alex@box:~/src/hol-light/$ 
#+end_example

We will need OPAM. If you're on a Raspberry pi, see [[https://dannywillems.github.io/2016/06/22/ocaml-raspberry-pi.html][OCaml on Raspberry Pi]]
for help.

The trippy thing is we need to use OPAM to use the "correct" version of
OCaml (c.f., [[https://github.com/jrh13/hol-light/issues/64#issuecomment-894131933][Github Issue]]), the following bash commands should work:

#+begin_example
opam switch create 4.05.0
eval $(opam env)
opam pin add camlp5 7.08
opam install num camlp5
#+end_example

So you will see something like the following (it may appear to "hang"
on ~Processing 7/12: [ocaml-base-compiler ...]~, but that's because
it's building the OCaml compiler from scratch; be patient!):

#+begin_example
alex@box:~/src/hol-light/$ opam switch create 4.05.0

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[ocaml-base-compiler.4.05.0] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
∗ installed base-bigarray.base
∗ installed base-threads.base
∗ installed base-unix.base
∗ installed ocaml-base-compiler.4.05.0
∗ installed ocaml-config.1
∗ installed ocaml.4.05.0
Done.
# Run eval $(opam env) to update the current shell environment

alex@box:~/src/hol-light/$ eval $(opam env)
alex@box:~/src/hol-light/$ opam pin add camlp5 7.08
camlp5 is now pinned to version 7.08

The following actions will be performed:
  ∗ install camlp5 7.08*
Do you want to continue? [Y/n] y

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[camlp5.7.08] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
∗ installed camlp5.7.08
Done.

alex@box:~/src/hol-light/$ opam install num camlp5
[NOTE] Package camlp5 is already installed (current version is 7.10).
The following actions will be performed:
  ∗ install base-num base [required by num]
  ∗ install num      0
===== ∗ 2 =====
Do you want to continue? [Y/n] y

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
∗ installed base-num.base
∗ installed num.0
Done.

alex@box:~/src/hol-light/$ 
#+end_example

This may not work, since OPAM may install camlp5 to
=$HOME/.opam/4.05.0/lib/camlp5=; in which case, we need to also:

#+begin_example
alex@box:~/src/hol-light/$ export CAMLP5LIB=$HOME/.opam/4.05.0/lib/camlp5
#+end_example

Now we can do the following:

#+begin_example
alex@box:~/src/hol-light/$ ocaml -I `camlp5 -where` camlp5o.cma

        OCaml version 4.05.0

	Camlp5 parsing version 7.08

# 
#+end_example

(This is because camlp5 isn't adequately included, for reasons I do not
pretend to understand, but I am thankful for the solution from
[[https://github.com/jrh13/hol-light/issues/29][here]]. Without doing this, we will get ~Cannot find file camlp5o.cam.~
error, which is just confusing and cryptic.)

Now we can simply ~#use "hol.ml";;~ to get:

#+begin_example
# #use "hol.ml";;
...
...
...
val search : term list -> (string * thm) list = <fun>
- : unit = ()
File "help.ml" already loaded
- : unit = ()
- : unit = ()
- : unit = ()
	Camlp5 parsing version 7.08

# 
#+end_example

You can go get a cup of tea or coffee, because it will take a minute or
two for everything to load. I suspect there's some way I could combine
all this into a small bash script.