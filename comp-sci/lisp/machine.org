#+TITLE: Lisp Machines
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2021-02-05T18:58:03-08:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../css/stylesheet.css" />
# Created Friday February  5, 2021 at  6:58PM

#+begin_quote
  Giving up on assembly language was the apple in our Garden of Eden:
  Languages whose use squanders machine cycles are sinful.
  The LISP machine now permits LISP programmers to abandon bra and fig-leaf.

-- Alan Perlis, Epigrams in Programming, ACM SIGPLAN Sept. 1982
#+end_quote

* Overview
:PROPERTIES:
:CUSTOM_ID: h-e0067fee-1487-4f43-99bc-2af55f5f3c57
:END:

It's still unclear to me the exact origins, but this is how I understand
Lisp machines: basically a RISC processor with some microcoded "Lisp
virtual machine" target. This is morally right, but quite wrong
historically. Correcting the errors, I think, will illuminate and
enlighten.

For more in-depth discussion on specific topics, I have relegated the
discussion [[file:machine/index.org][to their own articles]].

# https://handwiki.org/wiki/Lisp_machine

** Open Questions
:PROPERTIES:
:CUSTOM_ID: h-08565fbc-5bf5-4aa6-a5c0-ab0dc437f62e
:END:

How is a Lisp Machine (if we picture it as a virtual machine) different
from, say, an [[file:../abstract-machines/secd.org][SECD machine]]? Presumably more features are needed, but
what features are necessary?

* History of Lisp Machines
:PROPERTIES:
:CUSTOM_ID: h-7d217b7b-003a-43fa-a2fd-514ee28fcfcd
:END:

** Origins (1973--1979)
:PROPERTIES:
:CUSTOM_ID: h-a5537df0-6a80-4d60-bff4-47a43d84c009
:END:

Started at MIT's AI lab around 1973. Originally motivated by the
limitations of the PDP-10 when doing AI with Lisp (Macsyma and Woods's
LUNAR program are explicitly cited in AIM 444), the hope was to make
some high-level hardware designed for Lisp. It's unclear to me if the
hope was to manufacture Lisp-oriented hardware like how
[[https://en.wikipedia.org/wiki/Burroughs_large_systems][Burroughs large systems]] did for Algol 60, or if something else was the goal.

The first Lisp Machine was called the "Cons Machine", or informally
referred to as the "Knight machine" (named after Tom Knight who designed
it), and its prototype first appeared in 1975 (pg 27 of AI Memo 444).
It appears to be a [[https://en.wikipedia.org/wiki/Microcode][microcoded]] CPU --- i.e., a "vanilla CPU" with
microcode specifically for Lisp --- according to MIT AI Memo 444.
Knight's "CONS" (Working paper 80) explicitly suggests an amalgam of:

1. [[https://en.wikipedia.org/wiki/Xerox_Alto][Xerox Parc ALTO microprocessor]]
2. [[https://gunkies.org/wiki/PDP-11/40][the DEC PDP-11/40]]
3. CMU extensions to the PDP-11/40

Which is interesing. (See also [[https://people.cs.clemson.edu/~mark/uprog.html][the hisory of microprogramming]].) But this
ended the experimental phase, and gave way to the marketing period where
a number of different companies started producing and selling Lisp
machines.

- Richard Greenblatt,
  "The LISP Machine".
  MIT Working Paper 79, November 1974, [[https://dspace.mit.edu/handle/1721.1/41114][Eprint]].
- Thomas F Knight,
  "CONS".
  MIT Working Paper 80, November 1974, [[https://dspace.mit.edu/handle/1721.1/41115][Eprint]].
- Alan Bawden, Richard Greenblatt, Jack Holloway, Thomas Knight, David Moon, Daniel Weinreb,
  "LISP Machine Progress Report".
  [[https://dspace.mit.edu/handle/1721.1/5751][AI Memo 4444]], August 1977.
- Thomas F Knight,
  "Implementation of a list processing machine".
  [[https://dspace.mit.edu/handle/1721.1/16033][PhD Thesis, MIT]], January 1979.
- Thomas F. Knight, Jr., David A. Moon, Jack Holloway, Guy L. Steele, Jr.,
  "CADR".
  [[https://dspace.mit.edu/handle/1721.1/5718][AI Memo 528]], May 1979.
- A. Bawden, R. Greenblatt, Jack Holloway, Thomas Knight, David Moon,
  Daniel Weinreb,
  "LISP Machine Progress Report".
  [[https://dspace.mit.edu/handle/1721.1/5751][AI Memo 444]], August 1979.
- https://tumbleweed.nu/lm-3/

** Commercialization (1980--????)
:PROPERTIES:
:CUSTOM_ID: h-2bf56502-28a3-4081-88b1-6a2b67910703
:END:

Greenblatt founded Lisp Machines, Inc., some time in 1979 --- according
to Levy's /Hackers: Heroes of the Computer Revolution/.

Russell Nofsker founded [[https://en.wikipedia.org/wiki/Symbolics][Symbolics, Inc.]], in April 1980 to build and sell
Lisp machines. Most of the MIT AI Lab hackers (and financial backers)
sided with Nofsker's Symbolics over Greenblatt's LMI.

Symbolics's initial product was called the LM-2, released in 1981. It was
a MIT Cadr machine repackaged.

A couple years later, Symbolics released the 3600 in 1983. Like the Cadr
machine, it uses a microcoded setup atop a Motorola 68k CPU (this CPU
referred to as the "Front-End Processor" or FEP). The operating system
was named a year later, dubbed "Genera". (Yeah, it's odd the OS had no
name for a while, until 1984, but there it is.)

Texas Instruments acquired the rights to produce the MIT-derived Lisp
Machine from LMI in 1983 ([[http://www.unlambda.com/lispm/][unlambda]]). That year, TI also bought
[[https://en.wikipedia.org/wiki/NuMachine][NuMachine]] and NuBus from Western Digital. As I understand it, the entire
notion of a "computer bus" as we understand emerged from the NuBus.
Around 1985, released its [[https://en.wikipedia.org/wiki/TI_Explorer][TI Explorer]] Lisp Machine. A 1987 [[https://web.archive.org/web/20030202212627/http://www.ti.com/corp/docs/company/history/artificial.shtml][press release]]
noted the development of "the Explorer LISP microprocessor" and referred
to its earlier 1985 CPU as the "MegaChip" processor.


* Architecture
:PROPERTIES:
:CUSTOM_ID: h-7619fcfa-cefa-480d-820e-50b65e710c55
:END:

** CPU
:PROPERTIES:
:CUSTOM_ID: h-385d7dc0-08a2-4cc4-bf7f-d76195d876af
:END:

I can't quite understand the CPU the CONS machines used, nor which ones
the CADR machines used.

The [[https://en.wikipedia.org/wiki/Symbolics][Symbolics]] 3600 apparenly used a [[https://en.wikipedia.org/wiki/Motorola_68000_series][Motorola 68k]] CPU. David Moon cites a
number of benchmarks showing, given the choices at the time, the 68k CPU
performed best with Lisp code. Later with the introduction of the Ivory
and Genera system they moved to the 64-bit [[https://en.wikipedia.org/wiki/DEC_Alpha][Alpha]] architecture.

Xerox Daybreak used the MESA CPU. Apparently this is an esoteric CPU.

Interlisp used a [[https://en.wikipedia.org/wiki/MOS_Technology_6502][MOS 6502]] CPU variant, dubbed "INTER-LISP/65".

- Richard K. Johnsson, John D. Wick,
  [[http://www.bitsavers.org/pdf/xerox/mesa/princ_ops/An_Overview_Of_The_Mesa_Processor_Architecture_1982.pdf][An Overview of the Mesa Processor Architecture]], 1982
- David Moon,
  "Symbolics Architecure".
  1987

** Instruction Set
:PROPERTIES:
:CUSTOM_ID: h-c2cfc5b6-f062-4ea0-aa84-63c997f984cf
:END:

As I understand it, the insruction set for Lisp machines are referred to
as "macro instructions". In fact, according to the manual for Genera,
the ~disassemble~ command produces the "macro instructions" for the
compiled function.

At some level, we could think of a Lisp machine as an abstract machine
operating on these "macro instructions" as its instruction set. At this
level, a Lisp machine is a stack machine with some shortcuts and warts
([[https://groups.google.com/g/comp.lang.lisp/c/cju5hBZ_kJ4/m/zHdEYf3PHs4J][Paul Fuqua]]).

- Tom Knight,
  [[http://www.bitsavers.org/pdf/mit/cadr/Knight-LISP_Machine_Macro_Instruction_Set-1979.pdf][The LISP Machine Macro-instruction Set]].
  Manuscript, dated 1979.
- Symbolics [[http://bitsavers.trailing-edge.com/pdf/symbolics/3600_series/3600_Microcode_Dec83.pdf][3600 Microcode]], dated 1983.
- Symbolics I-Machine [[http://bitsavers.trailing-edge.com/pdf/symbolics/I_Machine/Macroinstruction_Set.pdf][Macroinstruction Set]]
- [[http://funcall.blogspot.com/2009/04/some-lisp-machine-minutia.html][Some Lisp Machine minutia]]

** Space Cadet Keyboard
:PROPERTIES:
:CUSTOM_ID: h-e54263f2-4f75-481d-b877-06aad9512b66
:END:

One relic which remains fabled among programmers today, the keyboard
used for Lisp machines back at MIT's AI lab, the CONS/CADR machines used
Space Cadet keyboards.

- Mike McMahon wrote about [[https://web.archive.org/web/20150112030657/http://home.comcast.net/~mmcm/kbd/SpaceCadet.html][Space Cadets]]
- [[https://www.reddit.com/r/lisp/comments/9s6hwf/modern_spacecadet_keyboards_and_other_lisp/][Modern Space-Cadet Keyboards and other Lisp Machine Tech]],
  reddit thread
- [[https://retrocomputing.stackexchange.com/questions/495/what-do-the-keys-on-this-symbolics-space-cadet-keyboard-do][What do the keys on this Symbolics Space Cadet keyboard do?]]
  Retrocomputing Stackexchange thread
- Steve Losh, [[https://stevelosh.com/blog/2012/10/a-modern-space-cadet/][A Modern Space Cadet]] Oct 3, 2012
- [[https://handwiki.org/wiki/Space-cadet_keyboard][HandWiki entry on SpaceCadet]]
- [[https://deskthority.net/wiki/Space-cadet_keyboard][Desk-thority Wiki Entry]] on Space Cadet Keyboards
- [[https://www.techfak.uni-bielefeld.de/~joern/jargon/space-cadetkeyboard.HTML][Jargon File entry]]
- [[http://www.quadibloc.com/comp/kyb01.htm][Quadibloc Entry on Keyboards]], including Space Cadets
- "Help With Original LISP Machine ('Space Cadet') Keyboard" [[https://alt.folklore.computers.narkive.com/JZbvfRTJ/help-with-original-lisp-machine-space-cadet-keyboard][alt.folklore.computers]]
- [[https://yildiz.dev/2020/12/31/a-modern-space-cadet-but-for-linux-md/][A Modern Space Cadet but for Linux]], 2020-12-31

* References
:PROPERTIES:
:CUSTOM_ID: h-9f2e825d-7df2-4461-8c2d-6ecc749eeda2
:END:

- [[https://smbx.org/symbolics-technical-summary/][Symbolics Technical Summary]], from the Symbolics Museum
- [[https://youtu.be/e39LnDVBl4c][I-Machine Lecture at MIT, Efland & BEE 1987-09-29]], Youtube
- P.M. Kogge,
  {{{book-title(The Architecture of Symbolic Computers)}}}.
  McGraw--Hill, 1991, ch. 10, sections 5 /et seq./
