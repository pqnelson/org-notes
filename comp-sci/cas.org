#+TITLE: Computer Algebra Systems
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+DATE: <2022-04-29T10:40:40-07:00>
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
#+INCLUDE: ../org-macros.org
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../index.html
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../css/stylesheet.css" />
# Created Friday April 29, 2022 at 10:40AM

* Introduction
:PROPERTIES:
:CUSTOM_ID: h-efc65a7b-c4a7-4274-83ea-4880d6649823
:END:

A "computer algebra system" refers to a computer program capable of
symbolically computing integrals, derivatives, etc. These seem to be a
large collection of rewriting rules.

I'm curious about hacking Lisp to turn it into a CAS, similar to how
Kiat Shi Tan and friends hacked C++ and turned it into a CAS. The
consensus among the Common Lisp community seems to be, "Just use Maxima, lol."
Maxima is amazing, but I just want to hack Common Lisp to do some basic
symbolic computation.


* References
:PROPERTIES:
:CUSTOM_ID: h-8f4d51ab-066b-42e4-a4b0-95ed9c1ede40
:END:

- [[https://fredrikj.net/blog/][Fredrik Johansson's blog]], interesting symbolic computation blog
- Thomas Fischbacher,\\
  "A novel approach to symbolic algebra".\\
  [[https://arxiv.org/abs/cs/0406002][arXiv:cs/0406002]], 15 pages, discusses an approach using MzScheme.
- Mathematica's [[https://reference.wolfram.com/language/tutorial/SomeNotesOnInternalImplementation.html][Some Notes on Internal Implementation]]
- [[https://github.com/livelisp/livewlisp/blob/main/maxima-tutorial.txt][A way to use MAXIMA lispy]]

** Books
:PROPERTIES:
:CUSTOM_ID: h-367c3493-2ebc-455e-bf4f-8593144655b1
:END:

- Joel Cohen,\\
  {{{book-title(Computer Algebra and Symbolic Computation)}}}.\\
  2 volumes; CRC Press, 2002.
- K.O. Geddes, S.R. Czapor, G. Labahn,\\
  {{{book-title(Algorithms for Computer Algebra)}}}.\\
  Springer, 1992
- Manuel Bronstein,\\
  {{{book-title(Symbolic Integration 1: Transcendental Functions)}}}.\\
  2nd ed., Springer-Verlag, 1997.
- Kiat Shi Tan and Willi-Hans Steeb and Yorick Hardy,\\
  {{{book-title(SymbolicC++: An Introduction to Computer Algebra Using Object-Oriented Programming)}}}.\\
  2nd ed., Springer, 2000.