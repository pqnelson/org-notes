#+TITLE: Computation and Science
#+AUTHOR: Alex Nelson
#+EMAIL: pqnelson@gmail.com
#+LANGUAGE: en
#+OPTIONS: H:5
#+HTML_DOCTYPE: html5
# Created Saturday December  5, 2020 at 10:42AM

* Introduction

I want to write my notes on physics, mathematics, and computer
science in such a manner that their relationships are explicit
among each other. That is to say: in my work on physics, I use
numerical methods implemented in my mathematics notes.

This is more an experiment with org-mode than the actual notes.

** Scope

The scope for my endeavor is rather open-ended. It may extend from
physics to [hard] science more generally. The computer science
aspects may be downplayed, or expanded, depending on my
curiosity. The underlying drive is to understand how the Earth
works, and how the solar system evolves in time.

Hopefully I will be able to create something useful, though these
are just notes and sketches of computer program fragments.

*** Extended Footnote on Historic Scope of "Natural Philosophy" in early modern history

Mortimer Adler's /The Four Dimensions of Philosophy/ (1993) noted
Natural Philosophy's scope was rather broader than current modern
science, to include:

- Astronomy and Cosmology
- "Study of nature on a grand scale"
- Etiology (study of intrinsic and extrinsic causes)
- Probability (study of chance and randomness)
- Study of Matter
- Mechanics
- Chemistry (study of elements)
- Nature of Space and Time

** Programming Language

I'm still debating the programming language I should use for this
endeavor. I want to use some Lisp, because Lisp supports symbolic
computation easily. Whenever possible, I'd prefer to use exact
results, which Lisp can facilitate more easily.

At the same time, I wish to use IEEE floating point (which seems to
rule out Common Lisp, except =sbcl= and possibly a few other
implementations).  The easiest solution is to use SBCL, and not
worry about the details.  One way to resolve this problem is to
implement my own floating point arithmetic with arbitrary precision
algorithms, or fall back to using the GNU Scientific Library, or
something similar.

FEMLISP look interesting.

** Organization

There is a clean-ish separation of concerns between the domains of
mathematics and science, but muddled separations among
sciences. I'm also uncertain where to divide mathematics and
computer science. But so far as Lisp cares, all the mathematics
code should be compiled before the science code. Where we draw the
line demarcating mathematics and computer science remains vague.

The current directory structure:

- [[file:physics/README.org][/physics]] for all physics-related notes
- [[file:math/README.org][/math]] for all mathematics notes
- [[file:comp-sci/README.org][/comp-sci]] for all computer science notes

As I continue working through my readings, I will add more
directories. For subfields (like, I don't know, astronomy) I will
add subdirectories where appropriate.
